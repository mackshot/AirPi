# Note that these parameters are used in airpi.py to determine whether a
# plugin is enabled or not, and also by the plugin Classes themselves to
# determine the options applicable to each instance when they init().

[Calibration]
filename = calibration
enabled = yes
# Function names must start with the "func_" and then the name of the sensor metric.
# Note that the *name* is different from the *sensor*. You can obtain the name by
# switching debug ON in cfg/settings.cfg and looking at the details as the sensor
# is initialised at the start of the run.
# Example: reduce temperature from BMP085 by 3 deg. Celcius:
#func_Temperature-BMP = x-3,Corrected Deg C

# ##############################################################################
# # DO NOT ASSUME THE FUNCTIONS BELOW ARE CORRECT!                             #
# # EVERY SENSOR IS DIFFERENT SO YOU CAN'T JUST COPY SOMEONE ELSE'S FUNCTIONS! #
# # THE ONLY WAY TO ACCURATELY CONVERT ANY RESISTANCE TO AN ABSOLUTE VALUE SUCH#
# # AS PPM IS TO CALIBRATE YOUR OWN SENSOR AGAINST A KNOWN 'GOOD' SENSOR/METER # 
# # IN SEVERAL KNOWN CONCENTRATIONS OF THE TARGET GAS, THEN USE THE KNOWN      #
# # 'GOOD' READINGS TO APPLY A FUNCTION TO YOUR AIRPI READINGS.                #
# ##############################################################################

# NO2 uses typical sensing resistance in synthetic air at 23 ± 5 deg. C
# and <5 ± 5% RH (from datasheet). This is known as R0; its value is
# 2200 Ohms. Ideally it would be customised for each individual AirPi.
# Don't forget we still need to compensate for temperature and humidity
# (temperature is more important for this sensor).
# See datasheet for full details / specifications.
#func_Nitrogen_Dioxide = (-4*math.pow(10,(-17*(x*x))))+math.pow(10,(-8*x))+0.2015,ppm-uncalibrated

# CO cannot be done using standard values, as the MiCS-5525 datasheet
# doesn't contain a value for R0 in synthetic air. If we do ever find
# one, replace all the 9s with it! UNTIL THEN, THIS FUNCTION IS GARBAGE!!
#func_Carbon_Monoxide = (969.6*(math.exp(-8.761*(x/999999999)))),pseudo-ppm

#func_Air_Quality = x*(0.024+0.0072*findval("Relative Humidity")+0.0246*findval("Temperature")),Corrected Ohms
#func_Air_Quality = x*(0.024+0.0072*2+0.0246*2),Corrected Ohms
# source: http://myscope.net/auswertung-der-airpi-gas-sensoren/
func_Air_Quality = math.pow(-2.995 * math.log(x / 20000) / math.log1p(10) - 0.4839, 2),ppm

# FUNCTION BELOW WAS SET BY FRED SONNENWALD:
# https://pi.gate.ac.uk/posts/2014/02/25/airpisensors/
# BEAR IN MIND HIS COMMENT: "Keep in mind that if your LDR isn't a 5528 then the
# function ... probably won't be correct anymore and should be recalculated off
# the appropriate datasheet".
func_Light_Level = math.exp((math.log(x / 25000) - 4.125) / -0.6704),Lux

#func_UVI = x * (5.25/20),UV Index
#func_UVI = (max(x - 1685,0) / 471) * 4.71 * (5.25/20),UV-Index
#func_UVI = (max(x - 1700,0) / 471) * 4.71 * (5.25/20),UV-Index
#func_UVI = (max(x - 1700,0) / 471) * 4.71 * (5.25/20),UV-Index
#func_UVI = (x / 471) * (5.25/20),UV-Index
#func_UVI = (max(x - 1700,0) / 471) * (5.25/20),UV-Index
#func_UVI = (max(x - 1700, 0) / 47.1) * (5.25/20),UV-Index
#func_UVI = (max(x - 2600, 0) / 47.1),UV-Index
#func_UVI = (max(x - 990, 0) / 196) * (8.25/20),UV-Index
func_UVI = (max(x - 990, 0) / 19.6),UV-Index

func_UVI-SI1145 = x / 100.0,UV-Index

func_Dust = max(0, (x * (5.0 / 1024.0) * 0.17) - 0.1),mg/m³

# 5 minutes interval # http://airpi.freeforums.net/thread/211/rain-gauge-hourly-rate
func_Bucket_tips=x*0.2794*12,mm/m²/h

# 5 minutes interval
func_Rotations=(x*2.4)/600,km/h

func_WindDirection = (x+0) %% 360,°

[Limits]
filename = limits
enabled = no
# Names must be the same as sensor names; use help=yes below if unsure
limit_Nitrogen_Dioxide = 1000,Ohms
limit_Carbon_Monoxide = 1000000,Ohms
# limit_Nitrogen_Dioxide = 103.1965692,ppm ;EU limit (hourly): 200 ug/m^3
# limit_Nitrogen_Dioxide = 20.63931384,ppm ;EU limit (yearly):  40 ug/m^3
# limit_Carbon_Monoxide = 8179.8393,ppm    ;EU limit: 10mg/m^3
# limit_Air_Quality = 10000,Ohms
# limit_Relative_Humidity = 60,%
# limit_Pressure = 1010,mBar
# limit_DHT22-Temperature = 24,C
# limit_BMP085-Temperature = 24,C
